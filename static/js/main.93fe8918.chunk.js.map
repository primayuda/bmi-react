{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","height","setHeight","weight","setWeight","bmi","setBmi","condition","error","isNaN","className","src","logo","alt","onSubmit","e","preventDefault","toFixed","type","step","placeholder","onChange","parseFloat","target","value","style","color","disabled","Boolean","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2LAAe,MAA0B,iC,eCuD1BA,MAnDf,WACE,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,GAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAsBJ,mBAAS,GAA/B,mBAAOK,EAAP,KAAYC,EAAZ,KACIC,EAAY,MAEVC,GADcC,MAAMR,KAAYQ,MAAMN,GACjB,KAAO,wBAsBlC,OApBIE,GAAO,GACTE,EAAY,WACK,OAARF,GAAwB,IAARA,IACzBE,EAAY,WAkBZ,qBAAKG,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SAC3C,gDACA,uBAAMC,SAVV,SAAmBC,GACjBA,EAAEC,iBAEFV,GAAQH,GAAQF,EAAOA,IAASgB,QAAQ,KAOtC,UACE,8BACF,iDAAmB,uBAAOC,KAAK,SAASC,KAAK,OAAOC,YAAY,OAAOC,SArB3E,SAA4BN,GAC1Bb,EAAUoB,WAAWP,EAAEQ,OAAOC,gBAsB1B,8BACF,kDAAoB,uBAAON,KAAK,SAASG,SApB7C,SAA4BN,GAC1BX,EAAUkB,WAAWP,EAAEQ,OAAOC,gBAqB1B,qBAAKC,MAAO,CAACC,MAAO,OAApB,SACGlB,IAEL,wBAAQmB,SAAUC,QAAQpB,GAAQU,KAAK,SAAvC,0BAEA,uCAAS,iCAASb,IAAlB,uBAAmD,6BAAKE,aCrC/CsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.93fe8918.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\n\nfunction App() {\n  const [height, setHeight] = useState(0);\n  const [weight, setWeight] = useState(0);\n  const [bmi, setBmi] = useState(0)\n  let condition = '___'\n  const validInput = !isNaN(height) && !isNaN(weight);\n  const error = validInput ? null : 'Please enter a number';\n  \n  if (bmi >= 25.00) {\n    condition = 'Unhealty'\n  } else if (bmi !== '__' && bmi !== 0.00){\n    condition = 'Healthy'\n  }\n  \n  function handleChangeHeight(e) {\n    setHeight(parseFloat(e.target.value));\n    // console.log(height);\n  }\n  function handleChangeWeight(e) {\n    setWeight(parseFloat(e.target.value));\n    // console.log(weight);\n  }\n\n  function calculate(e) {\n    e.preventDefault();\n    // console.log(height, weight)\n    setBmi((weight/(height*height)).toFixed(2))\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      <h1>BMI Calculator</h1>\n      <form onSubmit={calculate}>\n        <div>\n      <label>Height (m): <input type='number' step='0.01' placeholder='1.69' onChange={handleChangeHeight} /></label>\n        </div>\n        <div>\n      <label>Weight (kg): <input type='number' onChange={handleChangeWeight} /></label>\n        </div>\n        <div style={{color: 'red'}}>\n          {error}\n        </div>\n      <button disabled={Boolean(error)} type=\"submit\">Calculate</button>\n      </form>\n      <p>BMI : <strong>{bmi}</strong> This is considered <em>{condition}</em></p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}